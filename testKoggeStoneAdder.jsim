.include "D:\Backup\SUTD\ISTD\Computer Structures\50.002 Jsim\50002\nominal.jsim"
.include "D:\Backup\SUTD\ISTD\Computer Structures\50.002 Jsim\50002\stdcell.jsim"
//.include "D:\Backup\SUTD\ISTD\Computer Structures\50.002 Jsim\50002\lab3adder.jsim"
//.include "D:\Backup\SUTD\ISTD\Computer Structures\50.002 Jsim\50002\checkoff2d\2dcheckoff_100ns.jsim"
.include "D:\Backup\SUTD\ISTD\Computer Structures\50.002 Jsim\50002\checkoff2d\2dcheckoff_3ns.jsim"

.subckt fasterXOR a b c
X1 a b 1 nand2
X2 a 1 3 nand2
X3 b 1 2 nand2
X4 2 3 c nand2
.ends

.subckt fasterAND a b c
XAprime A Ap inverter
XBprime B Bp inverter
Xout Ap Bp c nor2
.ends

.subckt fasterOR a b c
X1 a a 1 nand2
X2 b b 2 nand2
X3 1 2 c nand2
.ends

.subckt PGgenRed A B P G
Xand A B G fasterAND
Xxor A B P fasterXOR
.ends

.subckt PGgenYellow Pi Gi Pp Gp P G 
XC0 Pi Pp P fasterAND
XC1 Pi Gp c2 fasterAND
XC2 c2 Gi G fasterOR
.ends

.subckt PGgenGreen P G Cin toAdd
//Xand P Cin forOr fasterAND
//Xor G forOr toAdd fasterOR
Xand P Cin forOr nand2
Xinv G Ginv inverter
Xor Ginv forOr toAdd nand2
.ends






.subckt adder32 op0 A[31:0] B[31:0] S[31:0] z v n

Xop0buffer op0 alufn0 buffer
Xabuffer A[31:0] ab[31:0] buffer
Xbbuffer B[31:0] bb[31:0] buffer

Xxor bb[31:0] alufn0#32 XB[31:0] xor2

Xlvl1 ab[31:0] XB[31:0] P1[31:0] G1[31:0] PGgenRed
//Xlvl1bufferP P1unbuffered[31:0] P1[31:0] buffer
//Xlvl1bufferG G1unbuffered[31:0] G1[31:0] buffer
//Xlvl1 A[31:0] XB[31:0] P1[31:0] G1[31:0] PGgenRed

Xlvl2yellow P1[31:1] G1[31:1] P1[30:0] G1[30:0] P2[31:1] G2[31:1] PGgenYellow
//Xlvl2bufferP P2unbuffered[31:1] P2[31:1] buffer
//Xlvl2bufferG G2unbuffered[31:1] G2[31:1] buffer
Xlvl2green P1[0] G1[0] alufn0 P2unbuffered[0] PGgenGreen
Xlvl2buffer P2unbuffered0 alufn1 buffer 

Xlvl3yellow P2[31:3] G2[31:3] P2[29:1] G2[29:1] P3[31:3] G3[31:3] PGgenYellow
//Xlvl3bufferP P3unbuffered[31:3] P3[31:3] buffer
//Xlvl3bufferG G3unbuffered[31:3] G3[31:3] buffer
Xlvl3green P2[2:1] G2[2:1] alufn[1:0] P3[1:0] PGgenGreen
Xlvl3buffer P3[1:0] alufn[3:2] buffer

Xlvl4yellow P3[31:7] G3[31:7] P3[27:3] G3[27:3] P4[31:7] G4[31:7] PGgenYellow
//Xlvl4bufferP P4unbuffered[31:7] P4[31:7] buffer
//Xlvl4bufferG G4unbuffered[31:7] G4[31:7] buffer
Xlvl4green P3[6:3] G3[6:3] alufn[3:0] P4unbuffered[3:0] PGgenGreen
Xlvl4buffer P4unbuffered[3:0] alufn[7:4] buffer

Xlvl5yellow P4[31:15] G4[31:15] P4[23:7] G4[23:7] P5[31:15] G5[31:15] PGgenYellow
//Xlvl5bufferP P5unbuffered[31:15] P5[31:15] buffer
//Xlvl5bufferG G5unbuffered[31:15] G5[31:15] buffer
Xlvl5green P4[14:7] G4[14:7] alufn[7:0] P5unbuffered[7:0] PGgenGreen
Xlvl5buffer P5unbuffered[7:0] alufn[15:8] buffer

Xlvl6yellow P531 G531 P515 G515 P631 G631 PGgenYellow
Xlvl6green P5[30:15] G5[30:15] alufn[15:0] alufn[31:16] PGgenGreen
//Xlvl6buffer P6unbuffered[15:0] alufn[]

Xlvl7green P631 G631 alufn0 Cout PGgenGreen
XfinalAdd P1[31:0] alufn[31:0] S[31:0] fasterXOR

******************************************************************
Xz S[31:0] z Z
Xv A31 XB31 S31 v V
Xn S31 n N
.ends

.subckt Z S[31:0] Zout
Xnor S[3:0] S[7:4] S[11:8] S[15:12] S[19:16] S[23:20] S[27:24] S[31:28] z[7:0] nor4
Xinv z[7:0] zp[7:0] inverter
Xandddd zp[3:0] zp[7:4] zA[1:0] nor4
Xand zA0 zA1 Zout fasterAND  
.ends

.subckt V A31 XB31 S31 Vout
XAbar A31 abar inverter
XBbar XB31 bbar inverter
XSbar S31 sbar inverter
//XandOne A31 XB31 sbar AndOne and3
//XandTwo abar bbar S31 AndTwo and3
XandOne abar bbar S31 AndOne nor3
XandTwo A31 XB31 sbar AndTwo nor3 
Xor AndOne AndTwo Vout fasterOR
.ends

.subckt N S31 Nout
.connect S31 Nout
//XNbuffer S31 Nout buffer 
//Above used to get netlist
.ends